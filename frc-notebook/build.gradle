apply plugin: 'android'

android {
    compileSdkVersion 19
    buildToolsVersion "19.0.0"

    defaultConfig {
        minSdkVersion 14
        targetSdkVersion 19
        versionCode 24
        versionName "3.2.0"
        testPackageName "com.plnyyanks.frcnotebook.tests"
        testInstrumentationRunner "android.test.InstrumentationTestRunner"
    }
    signingConfigs {
        release {
            storeFile file("../../keystore.jks")
            keyAlias "frc-notebook"

            storePassword "notRealPassword"
            keyPassword "notRealPassword"
        }
    }
    buildTypes {
        release {
            runProguard false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.txt'
            signingConfig signingConfigs.release
            applicationVariants.all { variant ->
                def file = variant.outputFile
                variant.outputFile = new File(file.parent, file.name.replace(".apk", "-" + defaultConfig.versionName + ".apk"))
            }
        }
    }
    lintOptions {
        abortOnError false
    }
    sourceSets{
        main{
            manifest.srcFile 'src/main/AndroidManifest.xml'
        }
        androidTest{

        }
    }
}


task askForPasswords << {
    // Must create String because System.readPassword() returns char[]
    // (and assigning that below fails silently)
    def storePw = new String(System.console().readPassword("\nKeystore password: "))
    def keyPw  = new String(System.console().readPassword("Key password: "))

    android.signingConfigs.release.storePassword = storePw
    android.signingConfigs.release.keyPassword = keyPw
}

tasks.whenTaskAdded { theTask ->
    if (theTask.name.equals("packageRelease")) {
        theTask.dependsOn "askForPasswords"
    }
}

dependencies {
    compile 'com.android.support:support-v4:19.0.0'
    compile files('libs/gson-2.2.4.jar')
    compile files('libs/jsoup-1.7.3.jar')
    compile files('libs/opencsv-2.3.jar')
}
